/*
BATTAGLIA NAVALE

 Scritto da Matteo Cestariolli, Luca Messina, Emanuele Minutella, Gioele Picone, Gioele Spanò.
 C18 testato con CodeBlocks su Windows 10 64 bit
 */

//0: Acqua
//1: Posizione della nave quando in fase di posizionamento. Posizione della nave colpita quando in fase d'attacco
//2: Acqua colpita in fase d'attacco



#include <stdio.h>

//void deploy(int verso, int *x, int *y, int mappa[][C]);

int main(){
    int mappa[11][11] =
    {
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    };

    int p1,p2,verso, c=3, c2=3, temp=0; //temp serve a far vedere al programma le navi come uniche entità e anche per evitare che vengano disposte le navi troppo vicine tra loro

    printf("                                  -------------------------------\n");
    printf("                                  |       BATTAGLIA NAVALE      |\n");
    printf("                                  |        GRIGLIA 10X10        |\n");
    printf("                                  -------------------------------\n\n\n");


    printf("                                  -------------------------------\n");
    printf("                                  |           PLAYER1           |\n");
    printf("                                  -------------------------------\n");





do{                             //Esegue il ciclo finché tutte le navi non sono state inserite.

    do{                         //Eseue il ciclo finché le navi non vengono inserite secondo i limiti prestabiliti (devono avere almeno un unità di distanza, non devono fuoriuscire dalla griglia 10x10).
            temp=0;

        do{
            printf("Inserisci le coordinate in cui mettere la nave lunga %d nell'ordine (x;y): ", c);
            scanf("%d", &p1);
            scanf("%d", &p2);
        }while(p1>10 || p1<1 || p2>10 || p2<1);
        int j1=p2-1;
        int k1=p1-1;

        if(c>1){
            do{
                printf("Inserisci il verso della nave\nVerticale: 1\nOrizzontale: 2\n");
                scanf("%d", &verso);
            }while(verso!=1 && verso!=2);
        }

//COLLOCAZIONE NAVI (IMPLEMENTARE CON UNA FUNZIONE)

    for(int j=j1;j<p2+c;j++){                   //I due contatori partono da p1-1 e p2-1 così da poter iniziare il controllo dello spazio la casella in alto a sinistra rispetto alla prima casella della nave.
        for(int k=k1;k<p1+c;k++){               //Vengono posti minori di p1+c e di p2+c per far sì che il loop finisca quando j e k sono nella casella in basso a destra rispetto all'ultima casella della nave.
            if(mappa[j][k]==1) temp=1;          //Nota che p1 e p2 sono rispettivamente ascissa e ordinata, mentre c è la dimensione della nave
        }
    }

if(temp==0){
    if(verso==1){
        if(p2==11-(c-1) || p2==12-(c-1)){       //Utilizzo la variabile che contiene la dimensione della nave per calcolare in quale posizione si troverebbe  griglia.
            printf("Spazio insufficiente\n");
        }
        else{
            for(int i=0;i<c;i++){
                mappa[p2][p1]=1;
                p2++;
            }
        }
    }else if(verso==2){
        if(p1==11-(c-1)){
            printf("Spazio insufficiente\n");
        }
        else{
            for(int i=0;i<c;i++){
                mappa[p2][p1]=1;
                p1++;
            }
        }
    }
}
c--;




//STAMPA LA SCRITTA "ERROR" NEL CASO CI SIA UNA NAVE TROPPO VICINA A UN'ALTRA (1 DI DISTANZA)
        if(temp==1){
            printf("                                  -------------------------------\n");
            printf("                                  |            ERROR            |\n");
            printf("                                  -------------------------------\n");
            c++;        //A questo punto c sarà 1 in meno. Dato che le navi sono state messe male lo facciamo tornare alla sua dimensione originale ed eseguiamo il loop in fondo
        }


//STAMPA A VIDEO LA MAPPA OGNI NAVE INSERITA
        for(int i=1;i<11;i++){
            for(int j=1;j<11;j++){
                printf("%d", mappa[i][j]);
            }
            printf("\n");
        }
        printf("%d | %d\n", temp, c+1);
    }while(temp==1);
}while(c>0);

printf("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n");



/*-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------------PLAYER2---------------------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

    int mappa2[11][11]=
    {
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    };


    printf("                                  -------------------------------\n");
    printf("                                  |           PLAYER2           |\n");
    printf("                                  -------------------------------\n");

     c=3;

do{                             //Esegue il ciclo finché tutte le navi non sono state inserite

    do{                         //Esegue il ciclo finché le navi non vengono inserite secondo i limiti prestabiliti (devono avere almeno un unità di distanza, non devono fuoriuscire dalla griglia 10x10)
            temp=0;

        do{
            printf("Inserisci le coordinate in cui mettere la nave lunga %d nell'ordine (x;y): ", c);
            scanf("%d", &p1);
            scanf("%d", &p2);
        }while(p1>10 || p1<1 || p2>10 || p2<1);
        int j1=p2-1;
        int k1=p1-1;
        if(c>1){
            printf("Inserisci il verso della nave\nVerticale: 1\nOrizzontale: 2\n");
            scanf("%d", &verso);
        }

//COLLOCAZIONE NAVI (IMPLEMENTARE CON UNA FUNZIONE)

        for(int j=j1;j<p2+1;j++){
            for(int k=k1;k<p1+1;k++){
                    if(mappa2[j][k]==1) temp=1;
                }
            }


    if(verso==1){
        if(p2==11-(c-1) || p2==12-(c-1)){                      //Utilizzo la variabile che contiene la dimensione della nave per calcolare in quale posizione uscirebbe dalla griglia.
            printf("Spazio insufficiente\n");
        }
        for(int i=0;i<c;i++){
            mappa2[p2][p1]=1;
            p2++;
        }

    }else if(verso==2){
        if(p1==11-(c-1)){
            printf("Spazio insufficiente\n");
        }
        for(int i=0;i<c;i++){
            mappa2[p2][p1]=1;
            p1++;
        }
    }
    c--;

//STAMPA LA SCRITTA "ERROR" NEL CASO CI SIA UNA NAVE TROPPO VICINA A UN'ALTRA (1 DI DISTANZA)
        if(temp==1){
            printf("                                  -------------------------------\n");
            printf("                                  |            ERROR            |\n");
            printf("                                  -------------------------------\n");
            c++;
        }


//STAMPA A VIDEO LA MAPPA OGNI NAVE INSERITA
        for(int i=1;i<11;i++){
            for(int j=1;j<11;j++){
                printf("%d", mappa2[i][j]);
            }
            printf("\n");
        }
    }while(temp==1);
}while(c>0);

printf("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n");

/*-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*-----------------------------------------------------------------------------------------------FASE DI ATTACCO-----------------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

//Faccio ripartire c da 3 in maniera tale da concludere il loop una volta finite le navi
c=3;

//Inizializzo mappa3 e mappa4 per poter mostrare all'utente quali punti ha colpito (non posso utilizzare le due mappe precedenti perché altrimenti si vedrebbe la posizione delle navi)
    int mappa3[11][11]=
    {
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    };
    int mappa4[11][11]=
    {
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0},
    };


/*-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*-----------------------------------------------------------------------------------------------PLAYER1 ATTACCO-----------------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/


do{
    int change=0;   //Diventa 1 quando il player manca il bersaglio. Serve a passare all'altro player

    do{
    printf("                                  -------------------------------\n");
    printf("                                  |           PLAYER1           |\n");
    printf("                                  -------------------------------\n");
        temp=0;

//STAMPA A VIDEO LA MAPPA PER OGNI COLPO TIRATO
        for(int i=1;i<11;i++){
            for(int j=1;j<11;j++){
                printf("%d", mappa3[i][j]);
            }
            printf("\n");
        }

/*-----------COORDINATE ATTACCO-----------*/
        do{
            printf("Inserisci le coordinate del punto in cui sparare nell'ordine (x;y): ");
            scanf("%d",&p1);
            scanf("%d",&p2);
        }while(p1>10 || p1<1 || p2>10 || p2<1);
/*---------------------------------------*/



/*-----------BERSAGLIO COLPITO-----------*/
        if(mappa2[p2][p1]==1){
            printf("\nBersaglio colpito ");
            mappa2[p2][p1]=2;
            mappa3[p2][p1]=1;
            for(int j=p2-1;j<=p2+1;j++){
                for(int k=p1-1;k<=p1+1;k++){
                    if(mappa2[j][k]==1) temp=1;
                }
            }
            if(temp==0){
                printf("e affondato!");
                c--;
            }
            printf("\n");
        }


/*-----------POSIZIONE GIA' COLPITA-----------*/
        else if(mappa2[p2][p1]==2){
            printf("\nHai gia' colpito questa posizione.\n");
        }


/*-----------BERSAGLIO MANCATO-----------*/
        else{
            printf("\nBersaglio mancato!\n");
            mappa3[p2][p1]=3;
            change=1;
        }

    }while(change==0 && c > 0);

/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

change=0;


/*-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*-----------------------------------------------------------------------------------------------PLAYER2 ATTACCO-----------------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

    if(c>0){
        do{
            printf("                                  -------------------------------\n");
            printf("                                  |           PLAYER2           |\n");
            printf("                                  -------------------------------\n");
            temp=0;

/*-----------COORDINATE ATTACCO-----------*/
 //STAMPA A VIDEO LA MAPPA PER OGNI COLPO TIRATO
            for(int i=1;i<11;i++){
                for(int j=1;j<11;j++){
                    printf("%d", mappa4[i][j]);
                }
                printf("\n");
            }

            do{
                printf("Inserisci le coordinate del punto in cui sparare nell'ordine (x;y): ");
                scanf("%d",&p1);
                scanf("%d",&p2);
            }while(p1>10 || p1<1 || p2>10 || p2<1);
/*---------------------------------------*/




/*-----------BERSAGLIO COLPITO-----------*/
            if(mappa[p2][p1]==1){
                printf("\nBersaglio colpito");
                mappa[p2][p1]=2;
                mappa4[p2][p1]=1;
                for(int j=p2-1;j<=p2+1;j++){
                    for(int k=p1-1;k<=p1+1;k++){
                        if(mappa[j][k]==1) temp=1;
                    }
                }
                if(temp==0){
                    printf(" e affondato!");
                    c2--;
                }
                printf("\n");
            }


/*-----------POSIZIONE GIA' COLPITA-----------*/
            else if(mappa[p2][p1]==2){
                printf("\nHai gia' colpito questa posizione.\n");
            }


/*-----------BERSAGLIO MANCATO-----------*/
            else{
                printf("\nBersaglio mancato!\n");
                mappa4[p2][p1]=2;
                change=1;
            }

        }while(change==0 && c2>0);
    }
}while(c>0 && c2>0);

if(c==0) printf("Il PLAYER 1 ha vinto!");
else printf("Il PLAYER 2 ha vinto!");

    return 0;

}
